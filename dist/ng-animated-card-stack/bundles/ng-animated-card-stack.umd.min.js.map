{"version":3,"sources":["ng://ng-animated-card-stack/lib/services/animated-stack.service.ts","ng://ng-animated-card-stack/lib/components/animated-card/animated-card.component.ts","ng://ng-animated-card-stack/lib/components/animated-stack/animated-stack.component.ts","ng://ng-animated-card-stack/lib/animated-card-stack.module.ts"],"names":["AnimatedStackService","this","_destroy$","Subject","destroy$","asObservable","_destroyed$","destroyed$","prototype","destroy","id","delayTime","_this","next","of","pipe","delay","tap","_","Injectable","AnimatedCardComponent","stackSrv","elemRef","renderer","ngAfterViewInit","setStyle","nativeElement","getPosition","getBoundingClientRect","getElement","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","Renderer2","Input","AnimatedStackComponent","subscribe","cardArray","cards","map","card","filter","deleted","i","findIndex","length","lastCoords","currentCoords","applyTranslation","index","deletedCard","cardElem","nextElem","elem","dx","x","dy","y","providers","ContentChildren","AnimatedCardStackModule","NgModule","imports","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject, of } from 'rxjs';\r\nimport { delay, tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AnimatedStackService {\r\n  private _destroy$ = new Subject<string>();\r\n  destroy$ = this._destroy$.asObservable();\r\n  private _destroyed$ = new Subject<string>();\r\n  destroyed$ = this._destroyed$.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  destroy(id: string, delayTime: number) {\r\n    this._destroy$.next(id);\r\n    return of(id).pipe(\r\n      delay(delayTime),\r\n      tap(_ => this._destroyed$.next(id))\r\n    );\r\n  }\r\n}\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2 } from '@angular/core';\r\nimport { AnimatedStackService } from '../../services/animated-stack.service';\r\n\r\n\r\n@Component({\r\n  selector: 'x-animated-card',\r\n  templateUrl: './animated-card.component.html',\r\n  styleUrls: ['./animated-card.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AnimatedCardComponent implements AfterViewInit {\r\n  /** index of the item in the list */\r\n  @Input() id: string;\r\n  delay = 400;\r\n  deleted: boolean;\r\n\r\n  constructor(\r\n    private stackSrv: AnimatedStackService,\r\n    private elemRef: ElementRef,\r\n    private renderer: Renderer2\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.renderer.setStyle(this.elemRef.nativeElement, 'transition', `${this.delay}ms transform`);\r\n  }\r\n\r\n  destroy() {\r\n    this.renderer.setStyle(this.elemRef.nativeElement, 'visibility', 'hidden');\r\n    return this.stackSrv.destroy(this.id, this.delay);\r\n  }\r\n\r\n  getPosition() {\r\n    return (this.elemRef.nativeElement as HTMLElement).getBoundingClientRect();\r\n  }\r\n\r\n  getElement() {\r\n    return this.elemRef.nativeElement;\r\n  }\r\n\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  QueryList,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { AnimatedCardComponent } from '../animated-card/animated-card.component';\r\nimport { AnimatedStackService } from '../../services/animated-stack.service';\r\n\r\n/**\r\n * animated component ðð±âðð¢ð¥ð¥\r\n */\r\n@Component({\r\n  selector: 'x-animated-stack',\r\n  templateUrl: './animated-stack.component.html',\r\n  styleUrls: ['./animated-stack.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [AnimatedStackService]\r\n})\r\nexport class AnimatedStackComponent implements AfterViewInit {\r\n  @ContentChildren(AnimatedCardComponent) cards: QueryList<AnimatedCardComponent>;\r\n\r\n  constructor(\r\n    private stackSrv: AnimatedStackService,\r\n    private renderer: Renderer2,\r\n    private elemRef: ElementRef\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n    // when a card has been destroyed we get its index\r\n    this.stackSrv.destroy$.subscribe(id => {\r\n      // getting the non deleted elements\r\n      const cardArray = this.cards.map(card => card)\r\n        .filter(card => !card.deleted);\r\n      const index = cardArray.findIndex(card => card.id === id);\r\n      for (let i = index + 1; i < cardArray.length; i++) {\r\n        // we now need to modify next card\r\n        const card = cardArray[i];\r\n        const lastCoords = cardArray[i - 1].getPosition();\r\n        const currentCoords = card.getPosition();\r\n        this.applyTranslation(card.getElement(), lastCoords, currentCoords);\r\n      }\r\n    });\r\n\r\n    // we need to reset the translation after changes\r\n    this.stackSrv.destroyed$.subscribe(id => {\r\n      const cardArray = this.cards.map(card => card);\r\n      const index = cardArray.findIndex(card => card.id === id);\r\n      const deletedCard = cardArray[index];\r\n      const cardElem = deletedCard.getElement();\r\n      deletedCard.deleted = true;\r\n      this.renderer.setStyle(cardElem, 'display', 'none');\r\n\r\n      for (let i = index + 1; i < cardArray.length; i++) {\r\n        // we reset styles\r\n        const nextElem = cardArray[i].getElement();\r\n        this.renderer.setStyle(nextElem, 'transform', 'none');\r\n        this.renderer.setStyle(nextElem, 'transition', 'none');\r\n      }\r\n    });\r\n  }\r\n\r\n  applyTranslation(elem, lastCoords, currentCoords) {\r\n    const dx = lastCoords.x - currentCoords.x;\r\n    const dy = lastCoords.y - currentCoords.y;\r\n    this.renderer.setStyle(elem, 'transition', '300ms transform');\r\n    this.renderer.setStyle(elem, 'transform', `translate3d(${dx}px, ${dy}px, 0)`);\r\n  }\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\nimport { AnimatedStackComponent } from './components/animated-stack/animated-stack.component';\nimport { AnimatedCardComponent } from './components/animated-card/animated-card.component';\n\n@NgModule({\n  imports: [],\n  declarations: [AnimatedStackComponent, AnimatedCardComponent],\n  exports: [AnimatedStackComponent, AnimatedCardComponent]\n})\nexport class AnimatedCardStackModule { }\n"]}